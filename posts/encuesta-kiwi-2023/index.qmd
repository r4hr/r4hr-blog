---
title: "4° Encuesta KIWI de Sueldos de RH"
description: "Resultados de la 4° Edición de la Encuesta KIWI de Sueldos de RH realizada por R4HR, el Club de R para RRHH"
date: "2023-11-30"
author: "R4HR"
title-block-banner: images/banner.png
categories: 
  - sueldos
  - kiwi
format:
  html:
    toc: true
    toc-location: left
    code-fold: true
    code-summary: "Ver código"
    code-copy: hover
execute: 
  warning: false
  error: false
  message: false
draft: true
---

```{r inicio}

# Liberías -----
library(tidyverse)
library(funModeling)
library(gt)
library(scales)
library(extrafont)
library(ggalt)
library(kableExtra)
library(wordcloud)
library(networkD3)
library(ggpmisc)
library(data.table)
library(ggeconodist)
library(wordcloud2) 
library(tidytext)
library(igraph)
library(ggraph)
library(grid)

# Configuraciones generales ----

options(scipen = 999)   # Modifica la visualización de los ejes numérico a valores nominales

loadfonts(quiet = TRUE) # Permite cargar en R otros tipos de fuentes.

# Estilo limpio sin líneas de fondo
estilo <- theme(panel.grid = element_blank(),
                plot.background = element_rect(fill = "#FBFCFC"),
                panel.background = element_blank(),
                plot.title.position = "plot")

# Estilo limpio con líneas de referencia verticales en gris claro
estilov <- theme(panel.grid = element_blank(),
                 plot.background = element_rect(fill = "#FBFCFC"),
                 panel.background = element_blank(),
                 panel.grid.major.x = element_line(color = "#AEB6BF"),
                 plot.title.position = "plot")

# Estilo limpio con líneas de referencia horizontales en gris claro
estiloh <- theme(panel.grid = element_blank(),
                 plot.background = element_rect(fill = "#FBFCFC"),
                 panel.background = element_blank(),
                 panel.grid.major.y = element_line(color = "#AEB6BF"),
                 plot.title.position = "plot")

genero <- c("#8624F5", "#1FC3AA", "#FFD129", "#75838F") #Violeta - Verde - Amarillo - Gris
genero3 <- c("#8624F5","#FFD129", "#1FC3AA")

colores <-  c("#8624F5", "#1FC3AA")

azul <- "#344D7E"
verde <-  "#1FC3AA"
rosa1 <- "#B95192"
rosa2 <- "#EE5777"
naranja <- "#FF764C"
amarillo <- "#FFD129"
gris <- "#75838F"
lila <- "#8624F5"
rojo <- "#943126"

col4 <- c(azul, lila, rosa1, rosa2)
col5 <- c(azul, lila, rosa1, rosa2, naranja)
col6 <- c(azul, lila, rosa1, rosa2, naranja, amarillo)

# Creo un objeto con un texto que se va a repetir mucho a lo largo del análisis
fuente <- "Fuente: Encuesta KIWI de Sueldos de RRHH 2023"

# Creo objetos para formatear las etiquetas numéricas de los ejes x e y
eje_x_n <- scale_x_continuous(labels = comma_format(big.mark = ".", decimal.mark = ","))

eje_y_n <- scale_y_continuous(labels = comma_format(big.mark = ".", decimal.mark = ","))

eje_x_p <- scale_x_continuous(labels = percent_format(accuracy = 1))

eje_y_p <- scale_y_continuous(labels = percent_format(accuracy = 1))


############################
# Cargar datos -----
rh23 <- read_delim("https://raw.githubusercontent.com/r4hr/kiwi2023/main/data/rh_2023.csv",
                   delim = ";") %>% 
  janitor::clean_names()

# Freelancers
freelo23 <- read_delim("https://raw.githubusercontent.com/r4hr/kiwi2023/main/data/freelancers_2023.csv", delim = ";") %>% 
  janitor::clean_names()

# Base Original
kiwi <- read_delim("https://raw.githubusercontent.com/r4hr/kiwi2023/main/data/kiwi_2023.csv", delim = ";") %>% 
  janitor::clean_names()


##### 
## Bases anteriores de relación de dependencia
# 2020
kiwi20 <- read_delim("https://raw.githubusercontent.com/r4hr/kiwi2022/main/data/rh_2020.csv", 
                   delim = ";") %>% 
  janitor::clean_names() %>% 
  mutate(anio = 2020)

# 2021
kiwi21 <- read_delim("https://raw.githubusercontent.com/r4hr/kiwi2022/main/data/rh_2021.csv",
                   delim = ";") %>% 
  janitor::clean_names() %>% 
  mutate(anio = 2021)

# 2022
kiwi22 <- read_delim("https://raw.githubusercontent.com/r4hr/kiwi2022/main/data/rh_2022.csv",
                   delim = ";") %>% 
  janitor::clean_names() %>% 
  mutate(anio = 2022)

```

```{r limpieza_datos}
# Agrupar puestos
rh23 <- rh23 %>% 
  mutate(puesto = 
           fct_collapse(puesto, 
                        "Administrativo" = c("Administrativo", "Generalista"),
                        "Responsable" = c("Responsable",
                                          "Coordinador",
                                          "Coordinador para 3 países",
                                          "Coordinadora", 
                                          "Supervisor"),
                        "Gerente" = c("Gerente", "Team Leader")),
         puesto = factor(puesto, levels = c("Director", "Gerente",
                                            "Jefe", "Responsable",
                                            "HRBP", "Analista",
                                            "Administrativo",
                                            "Pasante")))

# Agrupar funciones
rh23 <- rh23 %>% 
  mutate(funcion =
           fct_collapse(funcion,
                        "Generalista" = c("Generalista",
                                          "Auxiliar (tareas hard y soft)",
                                          "Coordinadora",
                                          "Dirección Gral del área",
                                          "Gestión de personas en general",
                                          "HRBP",
                                          "Todas",
                                          "Todo Generalista",
                                          "Todo lo anterior",
                                          "coordino el equipo en general",
                                          "generalista",
                                          "todo",
                                          "varias de la lista: reclutamiento y seleccion, adm de personal, compensaciones y beneficios, capacitacion y desarrollo, comunicacion interna, diseño organizacional, tareas generalistas"),
                        "Payroll / Liquidación de sueldos" = 
                          c("Payroll / Liquidación de sueldos", 
                            "Payroll, Talent acquisition, Talent Management,",
                            "Analisis Libranzas"),
                        "Administración de personal" = 
                          c("Administración de personal",
                            "Control Documentario"),
                        "Reclutamiento y selección" = 
                          c("Reclutamiento y selección",
                            "Analista Soft (Empleos, Comunicaciones Internas, Capacitación y Desarrollo)",
                            "Empleos y RRLL"),
                        "RSE" = c("RSE", "Recursos humanos y relaciones con la comunidad"),
                        "Diseño organizacional" = 
                          c("Diseño organizacional",
                            "Cultura",
                            "Transformación de RH"),
                        "Relaciones laborales" = c("Relaciones laborales",
                                                   "Ser el nexo con empleados, entablar relaciones, acompañarlos en lo que necesiten")))

# Limpieza tipo contratación
rh23 <- rh23 %>% 
  mutate(tipo_contratacion = fct_collapse(tipo_contratacion,
                                          "Indeterminado" = c("Indeterminado",
                                                              "Relac depend ncoa")))

```

# Introducción

[R4HR Club de R para RRHH](https://r4hr.netlify.app/) es una comunidad de aprendizaje de programación de R para profesionales y estudiantes que trabajen o quieran trabajar en RRHH.

Somos una comunidad que usa mayormente datos de ejemplo relacionados con RRHH, y que genera contenido en castellano para eliminar las barreras en el aprendizaje y facilitar que más personas adopten las herramientas de análisis de datos en sus trabajos.

También podés ver todo el contenido que generamos en los siguientes links:

`r icons::fontawesome("google-drive")` [Google Drive](https://drive.google.com/drive/folders/1Qck3z_t6XLRXb2vbN-00931DgdJZ0yse?usp=sharing)

`r icons::fontawesome("youtube")` [YouTube](https://youtube.com/playlist?list=PLZuVytUJrxQlcqu6l-P3ou4vV2mRJU2Ka)

`r icons::fontawesome("github")` [Github](https://github.com/r4hr/)

`r icons::fontawesome("link")` También te invitamos a seguirnos en todas [nuestras redes sociales](https://linktr.ee/r4hrclub).

Pueden acceder a los datos crudos desde [este link](https://docs.google.com/spreadsheets/d/1BCcBAoTkaTupBVr5TpLszvXLONNHOtx9zLOK9z_hKGk/edit?usp=sharing).

```{r paises}
# Respuestas en relación de dependencia
pais_rd <- rh23 %>% 
  group_by(pais) %>% 
  tally() %>% 
  ungroup()

# Respuestas de freelancers
pais_freelo <- freelo23 %>% 
  group_by(pais) %>% 
  tally() %>% 
  ungroup

# Uno los dataframes 
paises_kiwi <- full_join(pais_freelo, pais_rd, by = "pais") %>% 
    mutate(n.x = coalesce(n.x, 0),
         n.y = coalesce(n.y, 0),
         n = n.x + n.y)
```

# Motivaciones

Una de las barreras a la hora de aprender People Analytics es que en RRHH trabajamos con datos sensibles, por eso es muy difícil acceder a sets de datos para practicar. Por eso, e inspirados en la Encuesta de [SysArmy](https://sysarmy.com/blog/posts/resultados-de-la-encuesta-de-sueldos-2020-2/), una comunidad de tecnología, que entre otras cosas, organiza eventos como **Nerdearla**, hicimos nuestra propia encuesta, relevando datos de profesionales que trabajan tanto bajo relación de dependencia como de manera freelance. El relevamiento de datos lo hicimos entre el 1 y el 31 de octubre de 2023.

En esta edición recibimos `r nrow(rh23) + nrow(freelo23)` respuestas de `r nrow(paises_kiwi)` países diferentes.

```{r tabla_rtas_pais}
paises_kiwi %>%
  arrange(-n, pais) %>% 
  select(pais, n) %>% 
  rename("País" = pais,
         "Respuestas" = n) %>% 
  kbl(caption = "Respuestas por País", ) %>% 
  kable_styling(full_width = F, position = "center",
                bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% 
  footnote(general = fuente)
```

Del total de respuestas recibidas, `r nrow(rh23)` son de personas que trabajan en relación de dependencia en RRHH, mientras que `r nrow(freelo23)` personas trabajan de manera freelance.

```{r respuestas_por_modalidad_trabajo}

paises_kiwi <- paises_kiwi %>% 
  group_by(pais) %>% 
  summarise(total_freelo = sum(n.x),
            total_rd = sum(n.y)) %>% 
  ungroup() %>% 
  pivot_longer(cols = c("total_freelo", "total_rd"),
               names_to = "trabajo",
               values_to = "rtas")

kiwi %>% 
  select(trabajo) %>% 
  group_by(trabajo) %>% 
  count() %>% 
  ggplot(aes(x = n, y = trabajo)) +
  geom_col(fill = azul) +
  estilov +
  geom_text(aes(label = n), # Indica la cantidad de decimales
            size = 3,       # Cambia el tamaño de la letra
            hjust = 1.2,    # Mueve la etiqueta para la izquierda
            color = "white",
            family = "Roboto") +
  labs(title = "Respuestas por tipo de trabajador", 
       x = "", y = "", 
       caption = fuente)
```

Como aclaración, cuando nos referimos a la **identidad de género** de las personas, utilizamos los términos *Mujer cis/Mujer trans* y *Hombre cis/Hombre trans* para poder reflejar con mayor precisión el abánico de identidades y percepciones.

> El térmiino *"cis"* hace referencia a que la persona se identifica con el mismo género con el que nació.

Le agradecemos mucho a [Ivana Feldeberg](https://www.linkedin.com/in/ivana-feldfeber/) del [Observatorio de Datos con Perspectiva de Género](https://www.datagenero.org/) por el asesoramiento en este apartado.

Dicho esto, las respuestas según la identidad de género de las personas que participaron es la siguiente:

```{r respuestas_genero}
#| fig-show: hold
#| layout-ncol: 2

# Gráfico para relación de dependencia----
rh23 <- rh23 %>% 
  mutate(genero = fct_collapse(genero,  
                               "Hombre cis" = c("Hombre cis", "Hoimbre", "Hombre"),
                               "Mujer cis" = c("Mujer cis", "Mujer")))

div <- rh23 %>% 
  select(genero) %>% 
  mutate(genero = factor(genero, 
                         levels = c("Mujer cis", "Hombre cis", "Prefiero no responder"))) %>% 
  group_by(genero) %>% 
  summarise (n = n()) %>% 
  mutate(freq = n/sum(n)) %>% 
  arrange(-n)

# Compute the cumulative percentages (top of each rectangle)
div$ymax <- cumsum(div$freq)

# Compute the bottom of each rectangle
div$ymin <- c(0, head(div$ymax, n=-1))

# Compute label position
div$labelPosition <- (div$ymax + div$ymin) / 2

# Compute a good label
div$label <- paste0(div$genero, "\n Cant: ", div$n)

# Make the plot
ggplot(div, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=genero)) +
  geom_rect() +
  coord_polar(theta="y") + # Try to remove that to understand how the chart is built initially
  xlim(c(2, 4)) +# Try to remove that to see how to make a pie chart
  scale_fill_manual(values = c(lila, verde, amarillo)) +
  theme_void() +
  theme(legend.position = "top",
        panel.background = element_blank(),
        plot.title.position = "plot",
        text = element_text(family = "Roboto")) +
  labs(title = "Cantidad de respuestas según identidad de género",
       subtitle = "Relación de Dependencia",
       fill = "Identidad de Género", 
       caption = fuente)

# Gráfico de freelancers ----
# freelo23 <- freelo23 %>% 
#   mutate(genero = fct_collapse(genero, "Mujer cis" = c("Mujer cis", "Mujer")))

div <- freelo23 %>% 
  select(genero) %>% 
  group_by(genero) %>% 
  summarise (n = n()) %>% 
  mutate(freq = n/sum(n)) %>% 
  arrange(-n)

# Compute the cumulative percentages (top of each rectangle)
div$ymax <- cumsum(div$freq)

# Compute the bottom of each rectangle
div$ymin <- c(0, head(div$ymax, n=-1))

# Compute label position
div$labelPosition <- (div$ymax + div$ymin) / 2

# Compute a good label
div$label <- paste0(div$genero, "\n Cant: ", div$n)

# Make the plot
ggplot(div, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=genero)) +
  geom_rect() +
  coord_polar(theta="y") + # Try to remove that to understand how the chart is built initially
  xlim(c(2, 4)) +# Try to remove that to see how to make a pie chart
  scale_fill_manual(values = c(verde, lila)) +
  theme_void() +
  theme(legend.position = "top",
        panel.background = element_blank(),
        plot.title.position = "plot",
        text = element_text(family = "Roboto")) +
  labs(title = "Cantidad de respuestas según identidad de género",
       subtitle = "Freelancers",
       fill = "Identidad de Género", 
       caption = fuente)

```

En resumen, más de dos tercios de las personas que participaron de esta encuesta son mujeres cis. En esta edición no hemos recibidos respuestas de personas trans.

```{r genero_participantes}
# Corregir identidad de género
kiwi <- kiwi %>% 
    mutate(genero = fct_collapse(genero, "Mujer cis" = c("Mujer cis", "Mujer"),
                               "Hombre cis" = c("Hombre cis", "Hombre", "Hoimbre")),
         genero = factor(genero, levels = c("Mujer cis", "Hombre cis", "Prefiero no responder")))

# Crear tabla
kiwi %>% 
  group_by(genero) %>% 
  tally(sort = T) %>% 
  mutate(Porcentaje = n/sum(n),
         Porcentaje = percent(Porcentaje, accuracy = 0.1)) %>% 
  janitor::adorn_totals() %>% 
  rename("Identidad de Género" = genero, 
         "Cantidad" = n) %>% 
  kbl(caption = "Total de Participantes según\nIdentidad de Género") %>% 
  kable_styling(full_width = F, position = "center",
                bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% 
  footnote(general = fuente, general_title = "")
```

# Análisis de remuneraciones

## Remuneraciones por país

En esta sección nos dedicaremos a comparar los sueldos entre los países. En primer lugar, hay que resaltar que los resultados no son representativos de los mercados de los países, sino que lo son de los datos recolectados.

Por otra parte, la baja cantidad de respuestas recolectadas de otros países fuera de la Argentina, nos hace imposible, hacer un análisis comparado representativo de los puestos. Sin embargo, hay algunos datos interesantes para analizar.

Primero, analicemos los sueldos de los trabajadores en relación de dependencia, de cuyos países hayamos recibido al menos 3 respuestas.

```{r sueldo_pais1}
sueldos_dolar <- rh23 %>% 
  select(puesto, sueldo_dolar, pais, tipo_contratacion)

# Eliminamos los sueldos que están dentro del rango entre los percentiles 5 y 95
numericos <- profiling_num(sueldos_dolar)
poda_p05 <- numericos[1,6]
poda_p95 <- numericos[1,10]

# Dado que los percentiles 5 y 95 están en U$488 y 4355 respectivamente, 
# podamos todo lo que esté fuera de ese rango

media_pais <- sueldos_dolar %>% 
  filter(pais %in% c("Argentina", "Chile", "Perú", "Uruguay", "Colombia"),
         between(sueldo_dolar,poda_p05,poda_p95)) %>% 
  group_by(pais) %>% 
  summarise(sueldop = list(mean_se(sueldo_dolar))) %>% 
  unnest(cols = c(sueldop)) 
 
sueldo_dolar_pais <- rh23 %>% 
  select(pais, sueldo_dolar) %>% 
  filter(between(sueldo_dolar, poda_p05, poda_p95),
         pais %in% c("Argentina", "Chile", "Perú", "Uruguay", "Colombia"))

# Gráfico
ggplot(media_pais, aes(reorder(pais, -y), y =  y))+
  geom_col(fill = azul, alpha = 0.85) +
  geom_errorbar(aes(ymin = ymin,ymax = ymax), position = "dodge", color = "#333e47")+
  geom_point(data = sueldo_dolar_pais, aes(x = pais, y = sueldo_dolar), 
             alpha = 0.3, size = 2, color = "#75838F",
             position = position_jitter(width = 0.15))+
  geom_text(aes(label = comma(round(x=y, 0), big.mark = ".", 
                              decimal.mark = ","),
                vjust = 1.5, fontface = "bold"), 
            size = 4, color = "white",
            family = "Roboto")+
  eje_y_n +
  labs(title = "Salario promedio por país",
       subtitle = "Sueldos de RRHH en U$S",
       caption = paste0(fuente,"\nPaíses con 5 o más respuestas"),
       x = NULL, y = NULL) + 
  estiloh
```

Similar con lo visto en ediciones pasadas, *Uruguay* y *Chile* tienen los salarios de RRHH más altos en la región.

```{r sueldo_puesto}
# Crear un data frame sólo con países de Latinoamérica
rh23la <- rh23 %>% 
  filter(pais != "España")

# Gráficos de sueldo promedio por puesto
rh23la %>% 
  select(puesto, sueldo_dolar) %>% 
  filter(between(sueldo_dolar, poda_p05, poda_p95)) %>% 
  group_by(puesto) %>% 
  summarise(mediana_salarial = median(sueldo_dolar)) %>% 
  ggplot(aes(x = mediana_salarial, y = fct_rev(puesto))) +
  geom_col(fill = azul) +
  geom_text(aes(label = comma(mediana_salarial, accuracy = 1,prefix = "USS ",
                              decimal.mark = ",", big.mark = ".")),
                color = "#FBFCFC",
                hjust = 1.2,
            fontface = "bold",
            size = 3) +
  estilov +
  labs(title = "Mediana salarial por puesto", 
       subtitle = "Sueldos de RRHH en U$S", 
       x = "", y = "", 
       caption = fuente) +
  eje_x_n

```

La posición de **HRBP** presenta una complejidad, que es que dependiendo la empresa el rol es similar al de un Manager, o en otros casos es un Analista Especializado o Senior. Es por eso que encontramos entre los **HRBP** encontramos un suledo mínimo similar al de los analistas y salarios máximos mayores que el de los directores.

```{r sueldo_puesto_tabla}
gt(rh23la %>% 
     select(puesto, sueldo_dolar) %>% 
     filter(between(sueldo_dolar, poda_p05, poda_p95)) %>% 
     group_by(puesto) %>% 
     summarise(minimo = min(sueldo_dolar),
               mediana_salarial = median(sueldo_dolar),
               maximo = max(sueldo_dolar),
               cant = n())
     ) %>% 
  tab_header(title = "Mediana salarial por puestos", 
             subtitle = "Sueldos en U$D") %>% 
  tab_source_note(source_note = fuente) %>% 
   fmt_currency(columns =  c("mediana_salarial", "minimo", "maximo"), decimals = 0,
               sep_mark = ".", dec_mark = ",") %>% 
  cols_label(puesto = "Posición",
             minimo = "Mínimo",
             mediana_salarial = "Mediana",
             maximo = "Máximo",
             cant = "Respuestas") 
```

## Anállisis por Funciones

Entre las funciones mejor pagas, en esta edición encontrmos en el posio a **Diversidad e Inclusión**, **People Analytics**, y **RSE** cuentan con salarios más altos.

```{r funcion1}
# Calcular la mediana salarial 
funcion_rh <- rh23la %>% 
  filter(between(sueldo_dolar, poda_p05, poda_p95)) %>% 
  group_by(funcion) %>% 
  summarise(mediana = median(sueldo_dolar),
            cant = n()) %>% 
  arrange(-mediana)

min_funcion <- round(min(funcion_rh$mediana))
max_funcion <- round(max(funcion_rh$mediana))

# Gráfico
ggplot(funcion_rh, aes(x = mediana, y = reorder(funcion, mediana))) +
  geom_point(color = azul, size = 3) +
  geom_segment(aes(x = 0, xend = mediana, 
                   y = funcion, yend = funcion),
               color = azul) +
  labs(title = "Mediana Salarial por Función en LATAM",
       subtitle = "Sueldos de RRHH en U$S",
       x = NULL, y = NULL,
       caption = fuente) +
  geom_text(aes(label = comma(mediana, accuracy = 1,prefix = "USS ",
                              decimal.mark = ",", big.mark = ".")),
                color = azul,
                hjust = -.2,
            fontface = "bold",
            size = 3) +
  estilov +
  eje_x_n +
  scale_x_continuous(limits = c(0, 2500)) 

```

Nuevamente es necesario aclarar que hay funciones donde no tenemos mucha cantidad de respuestas como **Controller** donde sólo tenemos un solo caso, pero la diferencia entre las funciones con mayores sueldos, y con los menores sueldos es muy amplia (U\$D `r max_funcion - min_funcion`).

```{r}
gt(rh23la %>% 
     filter(between(sueldo_dolar, poda_p05, poda_p95)) %>% 
     select(funcion, sueldo_dolar) %>% 
     group_by(funcion) %>% 
     summarise(minimo = min(sueldo_dolar),
               mediana_salarial = median(sueldo_dolar),
               maximo = max(sueldo_dolar),
               cant = n())
     ) %>% 
  tab_header(title = "Mediana salarial por Función", 
             subtitle = "Sueldos en U$D") %>% 
  tab_source_note(source_note = fuente) %>% 
   fmt_currency(columns =  c("mediana_salarial", "minimo", "maximo"), decimals = 0,
               sep_mark = ".", dec_mark = ",") %>% 
  cols_label(funcion = "Función",
             minimo = "Mínimo",
             mediana_salarial = "Mediana",
             maximo = "Máximo",
             cant = "Respuestas") 
```

## Sueldos según el origen del capital

Si dividimos los gráficos según el *Origen del Capital*, podemos apreciar que en líneas generales, la mediana salarial en empresas multinaciones es mayor que en las empresas nacionales. Solamente en las posiciones de **HRBP** y de **Gerente** se aprecia una paridad salarial respecto del origen del capital de la organización.

```{r origen_capital}
rh23la %>% 
  select(origen_capital, puesto, sueldo_dolar) %>% 
  filter(puesto != "Pasante", 
         between(sueldo_dolar, poda_p05, poda_p95)) %>% 
  group_by(puesto, origen_capital) %>% 
  summarise(mediana_salarial = median(sueldo_dolar)) %>% 
  ggplot(aes(x = mediana_salarial, y = fct_rev(puesto), fill = origen_capital)) +
  geom_col() +
  geom_text(aes(label = round(x=mediana_salarial, 0), hjust = 1.2, fontface = "bold"),size = 3, color = "white") +
  scale_fill_manual(values = c(verde, azul)) +
  estilov +
  eje_x_n +
  facet_wrap(~origen_capital) +
  labs(title = "Mediana salarial por puesto según origen del capital", 
       subtitle = "Sueldos de RRHH en U$S", 
       x = "", y = "", fill = "", 
       caption = fuente) +
  theme(legend.position = "top")
```

Veamos este gráfico de otra manera:

```{r origen_capital_slope}
slope_df <- rh23la %>% 
  select(puesto, sueldo_dolar, origen_capital) %>% 
  filter(between(sueldo_dolar, poda_p05, poda_p95),
         puesto != "Pasante") %>% 
  group_by(puesto, origen_capital) %>% 
  summarise(mediana_salarial = round(median(sueldo_dolar)))

CGPfunctions::newggslopegraph(dataframe = slope_df,
                Times = origen_capital,
                Measurement = mediana_salarial,
                Grouping = puesto,
                Title = "Diferencias entre sueldos de RRHH en empresas nacionales y multinacionales",
                SubTitle = "Mediana Salarial. Sueldos en U$S",
                Caption = fuente, WiderLabels = T)
```

## Análisis por rubro y origen del capital

Para el análisis de los rubros de la empresa, vamos a filtrar los 5 rubros que tienen más respuestas. También eliminaremos del análisis el puesto de Director porque no se encuentra presente en todos los rubros.

```{r rubros}
#| fig-height: 15
top_5_rubros <- rh23la %>% 
  select(rubro) %>% 
  group_by(rubro) %>% 
  count(sort = TRUE) %>%
  filter(n > 15) %>% 
  pull(var = rubro)


rh23la %>% 
  mutate(rubro = str_wrap(rubro, width = 25)) %>% 
  select(rubro, origen_capital, puesto, sueldo_dolar) %>% 
  filter(puesto != "Pasante", puesto != "Director",
         between(sueldo_dolar, poda_p05, poda_p95),
         rubro %in% top_5_rubros) %>% 
  group_by(rubro, puesto, origen_capital) %>% 
  summarise(mediana_salarial = median(sueldo_dolar)) %>% 
  ggplot(aes(x = mediana_salarial, y = fct_rev(puesto), 
             fill = origen_capital)) +
  geom_col() +
  geom_text(aes(label = round(x=mediana_salarial, 0), 
                hjust = 1.2, 
                fontface = "bold"),
            size = 3, 
            color = "white") +
  scale_fill_manual(values = c(verde, azul)) +
  estilo +
  eje_x_n +
  facet_grid(rubro~origen_capital) +
  labs(title = "Mediana salarial por puesto según origen del capital", 
       subtitle = "Sueldos de RRHH en U$S", 
       x = "", y = "", fill = "", 
       caption = fuente) +
  theme(legend.position = "top")
```

Para ver las medianas salariales por rubros junto con el desvío estándar, pueden ver la siguiente tabla:

```{r rubros2}
rh23la %>% 
    select(rubro, sueldo_dolar) %>% 
    filter(between(sueldo_dolar, poda_p05, poda_p95)) %>% 
    group_by(rubro) %>% 
    summarise(mediana_salarial = round(median(sueldo_dolar)),
              desvio_salarial = round(sd(sueldo_dolar)),
              Respuestas = n()) %>% 
  ungroup() %>% 
    arrange(-mediana_salarial) %>% 
  kbl(caption = "Mediana salarial por rubro. En U$S", 
      col.names = c("Rubro", "Mediana Salarial","Desvío", "Respuestas")) %>% 
  kable_styling(full_width = F, position = "center",
              bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% 
  scroll_box(height = "500px")

```

# Análisis por países

En esta sección analizaremos la situación salarial de RRHH únicamente de tres países: *Argentina, Perú y Uruguay* únicamente, por la cantidad de respuestas. Del resto de los países tenemos menos de 5 respuestas, por lo que es imposible realizar un análisis serio.

::: panel-tabset
## Perú 🇵🇪

### Sueldos por Puesto

```{r}

# Preproceso de datos históricos
rh23la_clean <- rh23la %>% 
  filter(puesto != "Pasante",
         between(sueldo_dolar, poda_p05, poda_p95)) %>% 
  mutate(rubro = str_wrap(rubro, width = 30))

# Limpiar datos 2020
df2020 <-  profiling_num(kiwi20$sueldo_dolar)
p05_20 <- df2020[1,6]
p95_20 <- df2020[1,10]

rh20 <- kiwi20 %>% 
  filter(between(sueldo_dolar, p05_20, p95_20)) %>% 
  select(anio, pais, puesto, funcion = funcion_rh, sueldo_bruto) 


# Limpiar datos 2021
df2021 <- profiling_num(kiwi21$sueldo_dolar)
p05_21 <- df2021[1,6]
p95_21 <- df2021[1,10]

rh21 <- kiwi21 %>% 
  filter(between(sueldo_dolar, p05_20, p95_20)) %>% 
  select(anio, pais, puesto, funcion, sueldo_bruto) 

# Limpiar datos 2022
df2022 <- profiling_num(kiwi22$sueldo_dolar)
p05_22 <- df2021[1,6]
p95_22 <- df2021[1,10]

rh22 <- kiwi22 %>% 
  filter(between(sueldo_dolar, p05_20, p95_20)) %>% 
  mutate(anio = 2022) %>% 
  select(anio, pais, puesto, funcion, sueldo_bruto) 

# Armar un data frame histórico para Perú
rh20pe <- rh20 %>% 
  filter(pais == "Perú") 

rh21pe <- rh21 %>% 
  filter(pais == "Perú")

rh22pe <- rh22 %>% 
  filter(pais == "Perú")

rh23pe <- rh23la_clean %>% 
  filter(pais == "Perú") %>% 
  mutate(anio = 2023) %>% 
  select(anio, pais, puesto, funcion, sueldo_bruto)

# Evolucion
historico <- rbind(rh20pe, rh21pe, rh22pe, rh23pe)

#############################

# Filtrar los sueldos extremos
rh23la_clean <- rh23la %>% 
  filter(puesto != "Pasante",
         between(sueldo_dolar, poda_p05, poda_p95)) %>% 
  mutate(rubro = str_wrap(rubro, width = 30))

# Filtrar por Perú ----
rh_pe <- rh23la_clean %>% 
  filter(pais == "Perú") %>% 
  mutate(anio = 2023)

# Gráfico
rh_pe %>% 
  group_by(puesto) %>% 
  summarise(mediana = median(sueldo_bruto)) %>%
  ungroup() %>% 
  ggplot(aes(x = fct_rev(puesto), y = mediana)) +
  geom_col(fill = "#C8102E") +
  geom_text(aes(label = comma(mediana, big.mark = ".", decimal.mark = ",")),
            vjust = 1.2,
            size = 3, 
            color = "white") +
  eje_y_n +
  estiloh +
  labs(title = "Mediana Salarial por Puesto",
       subtitle = "Datos de Perú - En S/",
       x = NULL, y = NULL,
       caption = fuente)
```

### Sueldo por Función

```{r}
rh_pe %>% 
  group_by(funcion) %>% 
  summarise(mediana = median(sueldo_bruto)) %>%
  ungroup() %>% 
  ggplot(aes(y = reorder(funcion, mediana), x = mediana)) +
  geom_col(fill = "#C8102E") +
  geom_text(aes(label = comma(mediana, big.mark = ".", decimal.mark = ",")),
            hjust = 1.2,
            size = 3, 
            color = "white") +
  eje_x_n +
  estilov +
  labs(title = "Mediana Salarial por Función",
       subtitle = "Datos de Perú - En S/",
       x = NULL, y = NULL,
       caption = fuente)
```

### Sueldos por Rubro

```{r}
rh_pe %>% 
  group_by(rubro) %>% 
  summarise(mediana = median(sueldo_bruto)) %>%
  ungroup() %>% 
  ggplot(aes(y = reorder(rubro, mediana), x = mediana)) +
  geom_col(fill = "#C8102e") +
  geom_text(aes(label = comma(mediana, big.mark = ".", decimal.mark = ",")),
            hjust = 1.2,
            size = 3, 
            color = "white") +
  eje_x_n +
  estilov +
  labs(title = "Mediana Salarial por Rubro",
       subtitle = "Datos de Perú - En S/",
       x = NULL, y = NULL,
       caption = fuente)
```

### Evolución

La evolución de los salarios en moneda local puede ser contraintuitiva dada la baja cantidad de respuestas obtenidas por año.

```{r}

historico %>% 
  group_by(anio) %>% 
  summarise(promedio = mean(sueldo_bruto)) %>% 
  ungroup %>% 
  ggplot(aes(x = anio, y = promedio, group = 1)) +
  geom_line(color = "#C8102e") +
  geom_point(color = "#C8102e", size = 2) +
  geom_text(aes(label = comma(promedio, big.mark = ".", decimal.mark = ",")),
            vjust = -0.5,
            color = "#C8102e") +
  eje_y_n +
  estiloh +
  labs(title = "Promedio Salarial por Año",
       subtitle = "Datos de Perú - En S/",
       x = NULL, y = NULL,
       caption = fuente) +
  scale_y_continuous(limits = c(3000, 8000))
```


## Uruguay 🇺🇾

### Sueldos por Puesto

```{r}

# Armar un data frame histórico para Uruguay
rh20uy <- rh20 %>% 
  filter(pais == "Uruguay") 

rh21uy <- rh21 %>% 
  filter(pais == "Uruguay")

rh22uy <- rh22 %>% 
  filter(pais == "Uruguay")

rh23uy <- rh23la_clean %>% 
  filter(pais == "Uruguay") %>% 
  mutate(anio = 2023) %>% 
  select(anio, pais, puesto, funcion, sueldo_bruto)

# Evolucion
historico <- rbind(rh20uy, rh21uy, rh22uy, rh23uy)

#############################

# Filtrar los sueldos extremos
rh23la_clean <- rh23la %>% 
  filter(puesto != "Pasante",
         between(sueldo_dolar, poda_p05, poda_p95)) %>% 
  mutate(rubro = str_wrap(rubro, width = 30))

# Filtrar por Perú ----
rh_uy <- rh23la_clean %>% 
  filter(pais == "Uruguay") %>% 
  mutate(anio = 2023)

# Gráfico
rh_uy %>% 
  group_by(puesto) %>% 
  summarise(mediana = median(sueldo_bruto)) %>%
  ungroup() %>% 
  ggplot(aes(x = fct_rev(puesto), y = mediana)) +
  geom_col(fill = "#001489") +
  geom_text(aes(label = comma(mediana, big.mark = ".", decimal.mark = ",")),
            vjust = 1.2,
            size = 3, 
            color = "white") +
  eje_y_n +
  estiloh +
  labs(title = "Mediana Salarial por Puesto",
       subtitle = "Datos de Uruguay - En UYU",
       x = NULL, y = NULL,
       caption = fuente)
```

### Sueldo por Función

```{r}
rh_uy %>% 
  group_by(funcion) %>% 
  summarise(mediana = median(sueldo_bruto)) %>%
  ungroup() %>% 
  ggplot(aes(y = reorder(funcion, mediana), x = mediana)) +
  geom_col(fill = "#001489") +
  geom_text(aes(label = comma(mediana, big.mark = ".", decimal.mark = ",")),
            hjust = 1.2,
            size = 3, 
            color = "white") +
  eje_x_n +
  estilov +
  labs(title = "Mediana Salarial por Función",
       subtitle = "Datos de Uruguay - En UYU",
       x = NULL, y = NULL,
       caption = fuente)
```

### Sueldos por Rubro

```{r}
rh_uy %>% 
  group_by(rubro) %>% 
  summarise(mediana = median(sueldo_bruto)) %>%
  ungroup() %>% 
  ggplot(aes(y = reorder(rubro, mediana), x = mediana)) +
  geom_col(fill = "#001489") +
  geom_text(aes(label = comma(mediana, big.mark = ".", decimal.mark = ",")),
            hjust = 1.2,
            size = 3, 
            color = "white") +
  eje_x_n +
  estilov +
  labs(title = "Mediana Salarial por Rubro",
       subtitle = "Datos de Uruguay - En UYU",
       x = NULL, y = NULL,
       caption = fuente)
```

### Evolución

La evolución de los salarios en moneda local puede ser contraintuitiva dada la baja cantidad de respuestas obtenidas por año.

```{r}

historico %>% 
  group_by(anio) %>% 
  summarise(promedio = mean(sueldo_bruto)) %>% 
  ungroup %>% 
  ggplot(aes(x = anio, y = promedio, group = 1)) +
  geom_line(color = "#001489") +
  geom_point(color = "#001489", size = 2) +
  geom_text(aes(label = comma(promedio, big.mark = ".", decimal.mark = ",")),
            vjust = -0.5,
            color = "#001489") +
  eje_y_n +
  estiloh +
  labs(title = "Promedio Salarial por Año",
       subtitle = "Datos de Uruguay - En UYU",
       x = NULL, y = NULL,
       caption = fuente) #+
  #scale_y_continuous(limits = c(3000, 8000))
```


## Argentina 🇦🇷

### Sueldos por Puesto

```{r}

# Preproceso de datos históricos
rh23la_clean <- rh23la %>% 
  filter(puesto != "Pasante",
         between(sueldo_dolar, poda_p05, poda_p95)) %>% 
  mutate(rubro = str_wrap(rubro, width = 30))

# Limpiar datos 2020
df2020 <-  profiling_num(kiwi20$sueldo_dolar)
p05_20 <- df2020[1,6]
p95_20 <- df2020[1,10]

rh20 <- kiwi20 %>% 
  filter(between(sueldo_dolar, p05_20, p95_20)) %>% 
  select(anio, pais, puesto, funcion = funcion_rh, sueldo_bruto, sueldo_dolar) 


# Limpiar datos 2021
df2021 <- profiling_num(kiwi21$sueldo_dolar)
p05_21 <- df2021[1,6]
p95_21 <- df2021[1,10]

rh21 <- kiwi21 %>% 
  filter(between(sueldo_dolar, p05_20, p95_20)) %>% 
  select(anio, pais, puesto, funcion, sueldo_bruto, sueldo_dolar) 

# Limpiar datos 2022
df2022 <- profiling_num(kiwi22$sueldo_dolar)
p05_22 <- df2021[1,6]
p95_22 <- df2021[1,10]

rh22 <- kiwi22 %>% 
  filter(between(sueldo_dolar, p05_20, p95_20)) %>% 
  mutate(anio = 2022) %>% 
  select(anio, pais, puesto, funcion, sueldo_bruto, sueldo_dolar) 

# Armar un data frame histórico para Argentina
rh20ar <- rh20 %>% 
  filter(pais == "Argentina") 

rh21ar <- rh21 %>% 
  filter(pais == "Argentina")

rh22ar <- rh22 %>% 
  filter(pais == "Argentina")

rh23ar <- rh23la_clean %>% 
  filter(pais == "Argentina") %>% 
  mutate(anio = 2023) %>% 
  select(anio, pais, puesto, funcion, sueldo_bruto, sueldo_dolar)

# Evolucion
historico <- rbind(rh20ar, rh21ar, rh22ar, rh23ar)

#############################

# Filtrar los sueldos extremos
rh23la_clean <- rh23la %>% 
  filter(puesto != "Pasante",
         between(sueldo_dolar, poda_p05, poda_p95)) %>% 
  mutate(rubro = str_wrap(rubro, width = 30))

# Filtrar por Argentina ----
rh_ar <- rh23la_clean %>% 
  filter(pais == "Argentina") %>% 
  mutate(anio = 2023)

# Gráfico
rh_ar %>% 
  group_by(puesto) %>% 
  summarise(mediana = median(sueldo_bruto)) %>%
  ungroup() %>% 
  ggplot(aes(x = fct_rev(puesto), y = mediana)) +
  geom_col(fill = "#6CACE4") +
  geom_text(aes(label = comma(mediana, big.mark = ".", decimal.mark = ",")),
            vjust = 1.2,
            size = 3, 
            color = "white") +
  eje_y_n +
  estiloh +
  labs(title = "Mediana Salarial por Puesto",
       subtitle = "Datos de Argentina - En ARS",
       x = NULL, y = NULL,
       caption = fuente)
```
### Sueldos por Rubro

```{r}
rh_ar %>% 
  filter(rubro %in% c("Tecnologías de información", "Otros",
                      "Servicios de consultoría","Alimentación, bebidas",
                      "Servicios de salud", "Construcción",
                      "Comercio", "Industria metalúrgica,\nmetalmecánica",
                      "Industrias químicas",
                      "Agricultura, plantaciones,\notros sectores rurales"  )) %>% 
  group_by(rubro) %>% 
  summarise(mediana = median(sueldo_bruto)) %>%
  ungroup() %>% 
  ggplot(aes(y = reorder(rubro, mediana), x = mediana)) +
  geom_col(fill = "#6CACE4") +
  geom_text(aes(label = comma(mediana, big.mark = ".", decimal.mark = ",")),
            hjust = 1.2,
            size = 3, 
            color = "white") +
  eje_x_n +
  estilov +
  labs(title = "Mediana Salarial por Rubro",
       subtitle = "Datos de Argentina - En ARS",
       x = NULL, y = NULL,
       caption = fuente)
```


### Sueldo por Función

```{r}
rh_ar %>% 
  group_by(funcion) %>% 
  summarise(mediana = median(sueldo_bruto)) %>%
  ungroup() %>% 
  ggplot(aes(y = reorder(funcion, mediana), x = mediana)) +
  geom_point(color = azul) +
  geom_segment(aes(x = 0, xend = mediana, y = funcion, yend = funcion), 
               color = "#6CACE4") +
  geom_text(aes(label = comma(mediana, big.mark = ".", decimal.mark = ",")),
            hjust = -0.2,
            size = 2.8) +
  scale_x_continuous(limits = c(0, 900000), 
                     labels = comma_format(big.mark = ".",
                                           decimal.mark = ";")) +
  estilov +
  labs(title = "Mediana Salarial por Funció",
       subtitle = "Datos de Argentina - En AR$",
       x = NULL, y = NULL,
       caption = fuente)
```


### Evolución

La evolución de los salarios en moneda local puede ser contraintuitiva dada la baja cantidad de respuestas obtenidas por año.

```{r}
historico %>% 
  group_by(anio) %>% 
  summarise(mediana = median(sueldo_bruto)) %>% 
  ungroup %>% 
  ggplot(aes(x = anio, y = mediana, group = 1)) +
  geom_line(color = "#6CACE4") +
  geom_point(color = "#6CACE4", size = 2) +
  geom_text(aes(label = comma(mediana, big.mark = ".", decimal.mark = ",")),
            vjust = -0.5,
            color = "#6CACE4") +
  eje_y_n +
  estiloh +
  labs(title = "Mediana Salarial por Año",
       subtitle = "Datos de Argentina - En ARS",
       x = NULL, y = NULL,
       caption = fuente) +
  scale_y_continuous(limits = c(0, 600000))
```

### Evolución por Función vs. Año Anterior

```{r}
historico %>% 
  filter(anio %in% c(2022, 2023),
         funcion %in% c("HRIS / Administración de sistemas de RH",
                         "Generalista",
                        "Reclutamiento y selección",
                        "Administración de personal",
                        "Payroll / Liquidación de sueldos",
                        "Capacitación y desarrollo",
                        "People analytics",
                        "HRIS / Administración de sistemas de RH",
                        "Comunicación interna",
                        "Compensaciones y beneficios",
                        "Diseño organizacional",
                        "Relaciones laborales")) %>% 
  group_by(funcion, anio) %>%
  summarise(mediana = median(sueldo_bruto)) %>% 
  ungroup %>% 
  ggplot(aes(y = fct_rev(funcion), x = mediana, fill = factor(anio))) +
  geom_col(position = "dodge") +
  geom_text(aes(label = comma(mediana, big.mark = ".", decimal.mark = ",")),
            position = position_dodge(0.9),
            hjust = 1.2,
            size = 2, 
            color = "white") +
  theme(legend.position = "top") +
  guides(fill = guide_legend(reverse=TRUE)) +
  scale_fill_manual(values = c(gris, "#6CACE4")) +
  estilov +
  eje_x_n +
  labs(title = "Evolución Salarial por Función",
       subtitle = "En AR$",
       x = NULL, y = NULL,
       caption = fuente,
       fill = "Año")
```

### Comparación salarial por género

En el gráfico a continuación podemos apreciar que los hombres cis tienen sueldos más altos que las mujeres cis.

```{r}
rh_ar %>% 
  filter(genero %in% c("Hombre cis", "Mujer cis")) %>% 
ggplot(aes(x = genero, y = sueldo_ft, fill = genero)) +
  geom_boxplot() +
  eje_y_n +
  scale_fill_manual(values = c(verde, lila)) +
  estiloh +
  labs(title = "Distribución salarial por género",
       x = NULL, y = NULL,
       fill = "Género", 
       caption = fuente) +
  theme(legend.position = "none")
```
### Análisis por Género y Puesto

Cuando analizamos la distribución salarial por puesto, apreciamos desigualdades que se repiten de años anteriores. Antes de profundizar, expliquemos brevemente cómo interpretar el gráfico que vemos a continuación que se llama boxplot.

En primer lugar, la parte inferior de cada caja indica el valor del **primer cuartil**, es decir el límite donde se encuentra el 25% de los datos. Por otra parte, la parte superior de cada caja indica el **tercer cuartil**, o sea, el 75% de los datos. Esto implica que dentro de la caja nos encontramos con la mitad de los datos. La cantidad de casos dentro de cada mitad es la misma para cada caja.

Un elemento muy importante dentro del gráfico es la línea que observamos dentro de cada caja que representa a la **mediana** que es el valor que divide a la mitad a los datos. Este es el valor que habitualmente utilizamos para comparar salarios porque representa el punto medio para cada grupo y además no es sensible a valores extremos como el promedio. **La mediana es el valor que vamos a usar para comparar los sueldos entre hombres y mujeres**.

Los puntos que observamos en algunos casos indican valores extremos que denominamos **outliers**. Estos valores son atípicos. Las líneas que salen de las cajas indican los límites a partir de los cuales se determina que un valor es atípico o no.

Por último, el tamaño de la caja también es importante porque nos da una idea de la **distribución** de los datos. Si la caja es chiquita quiere decir que los sueldos están en un rango de valores cercano. En cambio si la caja, o una de sus mitades, es larga, eso nos indica que los sueldos tienen un rango más amplio, o sea que los sueldos llegan a valores más altos o más bajos dependiendo el caso, y que se alejan más de la mediana.

```{r}
rh_ar %>% 
  filter(genero %in% c("Hombre cis", "Mujer cis"),
         !puesto %in% c("Director", "Administrativo")) %>% 
ggplot(aes(x = fct_rev(puesto), y = sueldo_bruto, fill = genero)) +
  geom_boxplot() +
  estiloh +
  scale_fill_manual(values = c(verde, lila)) +
  eje_y_n +
  labs(title = "Distribución Salarial según Identidad de Género",
       subtitle = "En AR$",
       fill = "Identidad de Género",
       x = NULL, y = NULL,
       caption = fuente) +
  theme(legend.position = "top")
```

En el gráfico a continuación podemos apreciar la brecha salarial comparando la mediana salarial para hombres y mujeres en cada posición.

```{r}
brecha <- rh_ar %>% 
  filter(genero %in% c("Mujer cis", "Hombre cis"), 
         puesto %in% c("Gerente","Jefe", "HRBP","Responsable", "Analista")) %>% 
  mutate(puesto = factor(puesto, levels = c("Analista",  
                                            "HRBP", "Responsable", "Jefe",
                                            "Gerente","Director"))) %>% 
  group_by(genero, puesto) %>% 
  summarise(media_salarial = median(sueldo_bruto, na.rm = TRUE)) %>% 
  ungroup()


brecha_graf <- brecha %>% 
  pivot_wider(., names_from = genero, values_from = media_salarial) %>% 
  mutate(brecha = percent((`Hombre cis`-`Mujer cis`)/`Hombre cis`, 1),
         x = (`Hombre cis` + `Mujer cis`)/2)

ggplot(brecha_graf, 
       aes(x = `Mujer cis`, xend = `Hombre cis`, y = puesto, 
           group = puesto, label = brecha)) +
  geom_dumbbell(color = "#808080",
                size_x = 3, size_xend = 3,
                colour_x = colores[1],
                colour_xend = colores[2]) +
  geom_text(data = brecha_graf, 
            aes(x, puesto, label = brecha), size = 3,
            nudge_y = .2) +
  labs(title = "Brecha salarial por puestos de RRHH",
       subtitle = "Mediana en Argentina",
       x = "",
       y = NULL, 
       caption = fuente) +
  scale_x_continuous(labels = comma_format(big.mark = ".", decimal.mark = ",")) +
  scale_color_manual(values = colores)
```

```{r}
gt(rh_ar %>% 
  filter(genero %in% c("Hombre cis", "Mujer cis"), 
         !puesto %in% c("Director", "Administrativo")) %>% 
  group_by(puesto, genero) %>% 
  summarise(Rtas = n(),
            Min = min(sueldo_bruto),
            Mediana = median(sueldo_bruto),
            Promedio = mean(sueldo_bruto),
            Max = max(sueldo_bruto)
            ) %>% 
  ungroup() %>% 
  pivot_longer(cols = c("Rtas", "Min", "Mediana", "Promedio", "Max"),
               names_to = "Metrica",
               values_to = "Valor") %>% 
  pivot_wider(id_cols = c(puesto,genero),
              names_from = Metrica,
              values_from = Valor),
  groupname_col = "puesto") %>% 
  fmt_currency(columns = c(Min, Mediana, Promedio, Max),
               currency = "ARS",
               decimals = 0,
               sep_mark = ".",
               dec_mark = ",") %>% 
  tab_header(title = "Resumen Salarial por Puesto y Género",
             subtitle = "En AR$") %>% 
  tab_spanner(label = "Métricas Salariales",
              columns = c(Min, Mediana, Promedio, Max)) %>% 
  tab_source_note(source_note = fuente) %>% 
  cols_label(puesto = "Puesto",
             genero = "Género") %>% 
  tab_options(row_group.background.color = "#A3E4D7")
```


:::

# Diversidad en RRHH

## Liderazgo y género en RRHH

Analicemos las proporciones de hombres y de mujeres en puesto de liderazgo.

```{r}
#|label: Test hipotesis liderazgo
#| results: hide

div <- rh23la %>%
  filter(pais == "Argentina") %>% 
select(genero) %>% 
  mutate(genero = factor(genero, 
                         levels = c("Mujer cis", "Hombre cis"))) %>% 
  group_by(genero) %>% 
  summarise (n = n()) %>% 
  mutate(freq = n/sum(n)) %>% 
  arrange(-n)

lideres <- rh23la %>% 
  filter(pais == "Argentina") %>% 
 select(genero, puesto) 

# Propoción de líderes hombres y mujeres
lideres_genero <- lideres %>% 
  filter(genero %in% c("Mujer cis", "Hombre cis")) %>% 
  group_by(genero) %>%
  mutate(gente_a_cargo = if_else(puesto %in% c("Responsable", "Jefe", "Gerente", 
                                               "Supervisor", "Director"),1,0)) %>%
  summarise(lider = sum(gente_a_cargo)) %>% 
  left_join(div) %>% 
  select(genero, lider, n) %>% 
  mutate(proporcion = percent(lider/n))

# Test de hipótesis para validar diferencias de resultados
# Hay que verificar si la proporción de líderes hombres es mayor que la proporción de líderes mujeres
# Creo un dataframe para analizar proporciones de hombres y de mujeres en puestos de liderazgo y de no-liderazgo
test_lider <- lideres_genero %>% 
  mutate(no_lider = n - lider) %>%        # Columna de no líderes
  select(genero, lider, no_lider) %>%     # selecciono columnas de interés
  pivot_longer(cols = c(lider, no_lider), # Hago un dataset largo para analizar después
               names_to = "es_lider", values_to = "conteo")

# Del total de respuestas me interesa sólo ver cuáles son los hombres con puesto de liderazgo
test_lider$cat <- c(0,0,1,0)

# Extraigo el mu para decidir si la diferencia es significativa y pasarlo a la fórmula del test.
prop_mujer_lid <- pull(lideres_genero[1,2]/lideres_genero[1,3])

# Realizo el test de hipótesis.
# H0 = Las proporciones de líderes hombres y mujeres son iguales
# H1 = La proporción de hombres líderes es mayor que la proporción de mujeres líderes.
resultados_test <- broom::tidy(t.test(test_lider$cat, mu = prop_mujer_lid, alternative = "greater"))

valor_test <- if(resultados_test[1,3] > 0.05) {
  print("la diferencia es estadísticamente significativa, y la proporción de hombres en puestos de liderazgo es mayor que el de las mujeres")
  } else {
    print("la diferencia no es estadísticamente significativa, y la proporción de hombres no es estadísticamente mayor que el de las mujeres en puestos de liderazgo")
  }
```

```{r}
#| label: Gráfico de proporción de líderes por género


# Gráfico
lideres_genero %>% 
  mutate(porc_lider = lider/n, 
         porc_no_lider = 1 - porc_lider) %>% 
  pivot_longer(cols = c(porc_lider, porc_no_lider),
               names_to = "es_lider", 
               values_to = "valores") %>% 
  mutate(es_lider = factor(es_lider, 
                           levels = c("porc_no_lider", "porc_lider"), 
                           labels = c("No Líder", "Líder"))) %>% 
  ggplot(aes(x= genero, y = valores, fill = es_lider))+
  geom_col(position = "fill")+
  estilo +
  eje_y_p +
  scale_fill_manual(values = c(gris, azul)) +
  labs(title = "Proporción de Líderes según género",
       x = "", y = "", fill = "", 
       caption = fuente) +
  geom_text(aes(label = percent(valores)),
            position = position_stack(vjust = 0.5))
```

De acuerdo a las respuestas recolectadas **2 de cada 3** participantes son mujeres.

Para los puestos de liderazgo consideramos las personas en los puestos de *Director, Gerente, Jefe, y Responsable.*

Del total de **mujeres**, `r lideres_genero[2,3]` respuestas, `r lideres_genero[2,2]` ocupan un puesto de liderazgo (`r lideres_genero[2, 4]`).

Del total de **hombres**, `r lideres_genero[1, 3]` respuestas, `r lideres_genero[1,2]` ocupan un puesto de liderazgo (`r lideres_genero[1, 4]`).

Con un *p-value* igual a `r round(resultados_test[1,3],3)` podemos afirmar que **`r valor_test`**.


A pesar de que en Recursos Humanos en Argentina, las mujeres cis representan la mayor cantidad de empleados bajo relación de dependencia, y además se forman en mayor proporción que los varones en posgrados, proporcionalmente en comparación con los hombres cis, acceden a menos posiciones de liderazgo.

## Diversidad en RRHH


## Cuanta diversidad de identidades de género y orientaciones sexuales hay en RRHH
## En qué rubros se da la mayor tasa de diversidad
## Qué roles ejercen las personas diversas
## Machismo
## Discapacidad
## Puestos
## Contratación de personas con discapacidad
## Edad
## Nuevos Empleados


# Freelancers

# Otros análisis
## Relación entre satisfacción y sueldos
## Comunidades
  
